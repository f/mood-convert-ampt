import { createRequire as topLevelCreateRequire } from 'module'
const require = topLevelCreateRequire(import.meta.url)

// params/index.ts
var existingEnv = {
  ORG_NAME: process.env.AMPT_ORG_NAME,
  SERVICE_NAME: process.env.AMPT_SERVICE_NAME,
  INSTANCE_NAME: process.env.AMPT_INSTANCE_NAME,
  INSTANCE_TYPE: process.env.AMPT_INSTANCE_TYPE,
  APP_NAME: process.env.AMPT_SERVICE_NAME,
  STAGE_NAME: process.env.AMPT_STAGE,
  AMPT_URL: process.env.AMPT_URL,
  AMPT_REGION: process.env.AMPT_REGION
};
var Params = class {
  params;
  constructor() {
    this.params = {
      ...JSON.parse(process.env.AMPT_PARAMS || "{}") || {},
      ...JSON.parse(process.env.PARAMS || "{}") || {},
      ...existingEnv
    };
  }
  export(keys = []) {
    if (!keys.length) {
      process.env = {
        ...this.params,
        ...process.env
      };
    } else {
      keys.forEach((key) => {
        if (!process.env[key]) {
          process.env[key] = this.params[key];
        }
      });
    }
  }
  list() {
    return this.params;
  }
  handler(key) {
    if (key) {
      return this.params[key] || void 0;
    }
    return {
      export: this.export.bind(this),
      list: this.list.bind(this)
    };
  }
};
var _params = new Params();
var params = _params.handler.bind(_params);

export {
  Params,
  params
};
